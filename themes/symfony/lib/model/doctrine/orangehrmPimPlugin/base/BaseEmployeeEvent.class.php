<?php

/**
 * BaseEmployeeEvent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $event_id
 * @property integer $employeeId
 * @property string $type
 * @property string $event
 * @property string $note
 * @property date $createdDate
 * @property string $createdBy
 * @property Employee $Employee
 * 
 * @method integer       getEventId()     Returns the current record's "event_id" value
 * @method integer       getEmployeeId()  Returns the current record's "employeeId" value
 * @method string        getType()        Returns the current record's "type" value
 * @method string        getEvent()       Returns the current record's "event" value
 * @method string        getNote()        Returns the current record's "note" value
 * @method date          getCreatedDate() Returns the current record's "createdDate" value
 * @method string        getCreatedBy()   Returns the current record's "createdBy" value
 * @method Employee      getEmployee()    Returns the current record's "Employee" value
 * @method EmployeeEvent setEventId()     Sets the current record's "event_id" value
 * @method EmployeeEvent setEmployeeId()  Sets the current record's "employeeId" value
 * @method EmployeeEvent setType()        Sets the current record's "type" value
 * @method EmployeeEvent setEvent()       Sets the current record's "event" value
 * @method EmployeeEvent setNote()        Sets the current record's "note" value
 * @method EmployeeEvent setCreatedDate() Sets the current record's "createdDate" value
 * @method EmployeeEvent setCreatedBy()   Sets the current record's "createdBy" value
 * @method EmployeeEvent setEmployee()    Sets the current record's "Employee" value
 * 
 * @package    orangehrm
 * @subpackage model\pim\base
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEmployeeEvent extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ohrm_employee_event');
        $this->hasColumn('event_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('employee_id as employeeId', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('type as type', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             ));
        $this->hasColumn('event as event', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             ));
        $this->hasColumn('note as note', 'string', 150, array(
             'type' => 'string',
             'length' => 150,
             ));
        $this->hasColumn('created_date as createdDate', 'date', 25, array(
             'type' => 'date',
             'length' => 25,
             ));
        $this->hasColumn('created_by as createdBy', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Employee', array(
             'local' => 'employee_id',
             'foreign' => 'emp_number'));
    }
}